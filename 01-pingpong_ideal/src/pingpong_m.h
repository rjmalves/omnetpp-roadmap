//
// Generated file, do not edit! Created by nedtool 5.6 from pingpong.msg.
//

#ifndef __PINGPONG_M_H
#define __PINGPONG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>pingpong.msg:2</tt> by nedtool.
 * <pre>
 * message PingPongMsg
 * {
 *     simtime_t sendingTime;
 *     simtime_t recvTime;
 *     simtime_t processingTime = 0;
 * }
 * </pre>
 */
class PingPongMsg : public ::omnetpp::cMessage
{
  protected:
    ::omnetpp::simtime_t sendingTime;
    ::omnetpp::simtime_t recvTime;
    ::omnetpp::simtime_t processingTime;

  private:
    void copy(const PingPongMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PingPongMsg&);

  public:
    PingPongMsg(const char *name=nullptr, short kind=0);
    PingPongMsg(const PingPongMsg& other);
    virtual ~PingPongMsg();
    PingPongMsg& operator=(const PingPongMsg& other);
    virtual PingPongMsg *dup() const override {return new PingPongMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual ::omnetpp::simtime_t getSendingTime() const;
    virtual void setSendingTime(::omnetpp::simtime_t sendingTime);
    virtual ::omnetpp::simtime_t getRecvTime() const;
    virtual void setRecvTime(::omnetpp::simtime_t recvTime);
    virtual ::omnetpp::simtime_t getProcessingTime() const;
    virtual void setProcessingTime(::omnetpp::simtime_t processingTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PingPongMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PingPongMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __PINGPONG_M_H

